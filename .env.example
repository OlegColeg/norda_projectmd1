# Copy this file to .env and fill in your EmailJS credentials
# Copy this file to .env (for local dev) and fill in your EmailJS + optional Firebase credentials.
# When deploying to Vercel, set these as Project Environment Variables (do NOT commit real secrets).

# EmailJS (required to send confirmation emails)
VITE_EMAILJS_SERVICE_ID=service_p5j9ak4
VITE_EMAILJS_TEMPLATE_ID=template_g52eb3e
VITE_EMAILJS_PUBLIC_KEY=6B2jTwTuges4knKMw

# Optional: Firebase configuration used by the frontend to write orders to Firestore.
# These can be set in Vercel as well. The repo includes reasonable defaults but it's
# better to provide your own project values for production.
VITE_FIREBASE_API_KEY=
VITE_FIREBASE_AUTH_DOMAIN=
VITE_FIREBASE_PROJECT_ID=
VITE_FIREBASE_STORAGE_BUCKET=
VITE_FIREBASE_MESSAGING_SENDER_ID=
VITE_FIREBASE_APP_ID=
VITE_FIREBASE_MEASUREMENT_ID=

# Notes:
# - On Vercel, add the VITE_ variables under Settings â†’ Environment Variables for the
#   appropriate environment (Preview/Production).
# - EmailJS public key and service/template IDs are safe to be client-side, but treat them
#   like configuration values and rotate if leaked.
# - Firestore rules should be configured to allow writes only from your backend or via
#   authenticated users. This project writes orders directly from the client into `orders`.
#   For increased security, consider using a server-side function to accept orders and
#   write to Firestore (e.g., Firebase Functions, or Vercel Serverless Functions).
